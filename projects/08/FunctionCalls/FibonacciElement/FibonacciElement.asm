// 1 Main.vm
(Main.fibonacci)
@ARG
A=M
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@SP
A=M-1
D=M-D
@Main_TRUE_0
D;JLT
D=VMBoolType.FALSE
@Main_END_0
0;JMP
(Main_TRUE_0)
D=VMBoolType.TRUE
(Main_END_0)
@SP
A=M-1
M=D
@SP
AM=M-1
D=M
@Main.fibonacci$IF_TRUE
D;JNE
@Main.fibonacci$IF_FALSE
0;JMP
(Main.fibonacci$IF_TRUE)
@ARG
A=M
D=M
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@R14
M=D
@R14
D=M
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D
@SP
M=M+1
@R14
D=M
A=D-1
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
D=M
A=D
0;JMP
(Main.fibonacci$IF_FALSE)
@ARG
A=M
D=M
@SP
M=M+1
A=M-1
M=D
@2
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@SP
A=M-1
M=M-D
@Main.fibonacci$ret_Main.fibonacci_arg_1  _idx_0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=A
@1  
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=A
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret_Main.fibonacci_arg_1  _idx_0)
@ARG
A=M
D=M
@SP
M=M+1
A=M-1
M=D
@1
D=A
@SP
M=M+1
A=M-1
M=D
@SP
AM=M-1
D=M
@SP
A=M-1
M=M-D
@Main.fibonacci$ret_Main.fibonacci_arg_1  _idx_0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=A
@1  
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=A
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret_Main.fibonacci_arg_1  _idx_0)
@SP
AM=M-1
D=M
@SP
A=M-1
M=M+D
@LCL
D=M
@R14
M=D
@R14
D=M
@5
A=D-A
D=M
@R15
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D
@SP
M=M+1
@R14
D=M
A=D-1
D=M
@THAT
M=D
@R14
D=M
@2
A=D-A
D=M
@THIS
M=D
@R14
D=M
@3
A=D-A
D=M
@ARG
M=D
@R14
D=M
@4
A=D-A
D=M
@LCL
M=D
@R15
D=M
A=D
0;JMP
// 1 Sys.vm
(Sys.init)
@4
D=A
@SP
M=M+1
A=M-1
M=D
@Sys.init$ret_Main.fibonacci_arg_1   _idx_0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=A
@1   
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=A
@LCL
M=D
@Main.fibonacci
0;JMP
(Sys.init$ret_Main.fibonacci_arg_1   _idx_0)
(Sys.init$WHILE)
@Sys.init$WHILE
0;JMP
