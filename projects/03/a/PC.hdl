// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    // 选择将数据置零
    Mux16(a=sd, b[0..15]=false, sel=reset, out=rout);
    And16(a=sd, b=rout, out=resetsd);

    // 是否load
    Not(in=reset, out=canload);
    And(a=canload, b=load, out=mload);

    // load
    Mux16(a=resetsd, b=in,  sel=mload, out=loadsd);

    // 是否inc
    Or(a=reset, b=load, out=notinc);
    Not(in=notinc, out=caninc);
    And(a=caninc, b=inc, out=minc);

    // inc
    Add16(a=loadsd, b[0]=minc, b[1..15]=false, out=incsd);
    
    // else保持原值

    // 保存数据
    Register(in=incsd, load=true, out=sd);

    // 输出数据
    Or16(a=sd, b=sd, out=out);
}
